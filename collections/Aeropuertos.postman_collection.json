{
	"info": {
		"_postman_id": "f575bfd1-9bb2-46bd-9b6f-610e6daf5df4",
		"name": "Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27025715"
	},
	"item": [
		{
			"name": "Crear un aeropuerto válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airportId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n   \"codigo\": \"BOG\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Bogotá\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear un aeropuerto válido",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n   \"codigo\": \"BOG\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Bogotá\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Crear un aeropuerto inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airportId\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n   \"codigo\": \"BOGOTA\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Bogotá\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Crear un aeropuerto inválido",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Avianca\",\r\n   \"descripcion\": \"Avianca S.A. (siglas de Aerovías del Continente Americano S.A., denominadas avianca desde octubre de 2023) es la aerolínea más grande de Colombia, Ecuador, Centroamérica. Es propiedad del holding Avianca Group. Ha sido la aerolínea de bandera de Colombia desde el 5 de diciembre de 1919, cuando se registró inicialmente con el nombre de SCADTA. Tiene su sede en Colombia, su sede global en Bogotá y su centro principal en el Aeropuerto Internacional El Dorado. Avianca es el buque insignia de un grupo de diez aerolíneas latinoamericanas, que operan como una sola aerolínea utilizando un sistema de código compartido.\",\r\n   \"fechaFundacion\": \"2025-12-31\",\r\n   \"paginaWeb\": \"www.avianca.com\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener todos los aeropuertos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of airports > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los aeropuertos",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un aeropuerto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/{{airportId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"{{airportId}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un aeropuerto por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{airportId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un aeropuerto por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una aerolínea por un ID que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Actualizar un aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n   \"codigo\": \"BOG\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Mosquera\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports/{{airportId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"{{airportId}}"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un aeropuerto",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional El Dorado\",\r\n   \"codigo\": \"BOG\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Mosquera\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports/{{airportId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Actualizar un aeropuerto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional Alfonso Bonilla Aragón\",\r\n   \"codigo\": \"CLO\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Cali\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar una aerolínea con un ID que no existe",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"Aeropuerto Internacional Alfonso Bonilla Aragón\",\r\n   \"codigo\": \"CLO\",\r\n   \"pais\": \"Colombia\",\r\n   \"ciudad\": \"Cali\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un aeropuerto por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/{{airportId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"{{airportId}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un aeropuerto por su ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{airportId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airportId}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un aeropuerto con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un aeropuerto con un ID que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}